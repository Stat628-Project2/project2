library(recommenderlab)

data(MovieLense)
MovieLense
set.seed(2)
u_index<-sample(0:dim(MovieLense)[1],size=1,replace=F)
train<-MovieLense[-u_index,]
u<-MovieLense[u_index]
empty<-which(u@data==0)
as(u,"matrix")[,1:5]

r<-Recommender(train,method="UBCF")
recom<-predict(r,u,n=5) # top-5 list
as(recom,"list")
empty<-which(u@data==0)
recomm<-predict(r,u,type="ratings")
as(recomm[,empty],"list")
recomm@data@x
top5<-which(order(recomm@data@x)%in%1:5)
unlist(recomm@data@Dimnames)[top5] 
sort(recomm@data@x,decreasing=T)[1:5]#top 5 recommended

scheme <- evaluationScheme(train, method = "cross", k =
4, given = 10, goodRating=3)

r<-Recommender(train,method="IBCF")
recom<-predict(r,u,n=5) # top-5 list
as(recom,"list")
empty<-which(u@data==0)
recomm<-predict(r,u,type="ratings")
as(recomm[,empty],"list")

r<-Recommender(train,method="POPULAR")
recom<-predict(r,u,n=5) # top-5 list
as(recom,"list")
empty<-which(u@data==0)
recomm<-predict(r,u,type="ratings")
as(recomm[,empty],"list")[[1]][1:10]

r<-Recommender(train,method="RANDOM")
recom<-predict(r,u,n=5) # top-5 list
as(recom,"list")
empty<-which(u@data==0)
recomm<-predict(r,u,type="ratings")
as(recomm[,empty],"list")[[1]][1:10]

scheme <- evaluationScheme(train, method = "cross", k =
4, given = 10, goodRating=3)

algorithms <- list('random items'= list(name = "RANDOM", param = NULL),
'popular items' = list(name = "POPULAR", param = NULL), 'user-based CF' = list(name = "UBCF", param = list(method = "Cosine", nn = 50)),
'item-based CF' = list(name = "IBCF", param = list(method = "Cosine", k = 50)))

results<-evaluate(scheme, algorithms, n = c(1, 3, 5, 10, 15, 20, 50))
plot(results, annotate = c(1, 3), legend = "right")
plot(results,annotate = c(1, 3),legend = "right",xlim=c(0,0.25))
